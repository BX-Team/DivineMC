From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: NONPLAYT <76615486+NONPLAYT@users.noreply.github.com>
Date: Fri, 4 Nov 2022 17:00:07 +0300
Subject: [PATCH] Divine Branding


diff --git a/build.gradle.kts b/build.gradle.kts
index 530159ef6307e092279824488652bbc94d3ad387..df5c8abe5fe5428f99fab668583c0af986adbd27 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -7,7 +7,7 @@ plugins {
 }
 
 dependencies {
-    implementation(project(":pufferfish-api")) // Pufferfish // Paper
+    implementation(project(":divinemc-api")) // DivineMC // Pufferfish // Paper
     // Pufferfish start
     implementation("io.papermc.paper:paper-mojangapi:1.19.2-R0.1-SNAPSHOT") {
         exclude("io.papermc.paper", "paper-api")
@@ -82,7 +82,7 @@ tasks.jar {
         attributes(
             "Main-Class" to "org.bukkit.craftbukkit.Main",
             "Implementation-Title" to "CraftBukkit",
-            "Implementation-Version" to "git-Pufferfish-$implementationVersion", // Pufferfish
+            "Implementation-Version" to "git-DivineMC-$implementationVersion", // DivineMC // Pufferfish
             "Implementation-Vendor" to date, // Paper
             "Specification-Title" to "Bukkit",
             "Specification-Version" to project.version,
diff --git a/src/main/java/com/destroystokyo/paper/Metrics.java b/src/main/java/com/destroystokyo/paper/Metrics.java
index 692c962193cf9fcc6801fc93f3220bdc673d527b..2bf46834536d3702fa2ae49ce276a163a5cd1456 100644
--- a/src/main/java/com/destroystokyo/paper/Metrics.java
+++ b/src/main/java/com/destroystokyo/paper/Metrics.java
@@ -593,7 +593,7 @@ public class Metrics {
             boolean logFailedRequests = config.getBoolean("logFailedRequests", false);
             // Only start Metrics, if it's enabled in the config
             if (config.getBoolean("enabled", true)) {
-                Metrics metrics = new Metrics("Pufferfish", serverUUID, logFailedRequests, Bukkit.getLogger()); // Pufferfish
+                Metrics metrics = new Metrics("DivineMC", serverUUID, logFailedRequests, Bukkit.getLogger()); // Pufferfish // DivineMC
 
                 metrics.addCustomChart(new Metrics.SimplePie("minecraft_version", () -> {
                     String minecraftVersion = Bukkit.getVersion();
diff --git a/src/main/java/com/destroystokyo/paper/console/PaperConsole.java b/src/main/java/com/destroystokyo/paper/console/PaperConsole.java
index c5d5648f4ca603ef2b1df723b58f9caf4dd3c722..05478a1ea04ec0396bc8c97090edef4a2aced2a9 100644
--- a/src/main/java/com/destroystokyo/paper/console/PaperConsole.java
+++ b/src/main/java/com/destroystokyo/paper/console/PaperConsole.java
@@ -17,7 +17,7 @@ public final class PaperConsole extends SimpleTerminalConsole {
     @Override
     protected LineReader buildReader(LineReaderBuilder builder) {
         builder
-                .appName("Paper")
+                .appName("DivineMC") // DivineMC
                 .variable(LineReader.HISTORY_FILE, java.nio.file.Paths.get(".console_history"))
                 .completer(new ConsoleCommandCompleter(this.server))
                 .option(LineReader.Option.COMPLETE_IN_WORD, true);
diff --git a/src/main/java/gq/bxteam/divinemc/DivineVersionFetcher.java b/src/main/java/gq/bxteam/divinemc/DivineVersionFetcher.java
new file mode 100644
index 0000000000000000000000000000000000000000..0dc13e363448d7a0f20993e0576af625b5ca334a
--- /dev/null
+++ b/src/main/java/gq/bxteam/divinemc/DivineVersionFetcher.java
@@ -0,0 +1,137 @@
+package gq.bxteam.divinemc;
+
+import com.destroystokyo.paper.VersionHistoryManager;
+import com.destroystokyo.paper.util.VersionFetcher;
+import com.google.gson.Gson;
+import com.google.gson.JsonObject;
+import net.kyori.adventure.text.Component;
+import net.kyori.adventure.text.JoinConfiguration;
+import net.kyori.adventure.text.format.NamedTextColor;
+import net.kyori.adventure.text.format.TextDecoration;
+import org.bukkit.craftbukkit.CraftServer;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+import java.io.IOException;
+import java.net.URI;
+import java.net.http.HttpClient;
+import java.net.http.HttpRequest;
+import java.net.http.HttpResponse;
+import java.nio.charset.StandardCharsets;
+import java.util.concurrent.TimeUnit;
+import java.util.logging.Level;
+import java.util.logging.Logger;
+
+import static net.kyori.adventure.text.Component.text;
+import static net.kyori.adventure.text.format.NamedTextColor.GREEN;
+import static net.kyori.adventure.text.format.NamedTextColor.RED;
+
+public class DivineVersionFetcher implements VersionFetcher {
+    private static final Logger LOGGER = Logger.getLogger("DivineVersionFetcher");
+    private static final HttpClient client = HttpClient.newHttpClient();
+
+    private static final URI JENKINS_URI = URI.create("https://raw.githubusercontent.com/DivineMC/Website/dev/latestBuild");
+    private static final String GITHUB_FORMAT = "https://api.github.com/repos/DivineMC/DivineMC/compare/ver/1.19.3...%s";
+
+    private static final HttpResponse.BodyHandler<JsonObject> JSON_OBJECT_BODY_HANDLER = responseInfo -> HttpResponse.BodySubscribers.mapping(
+            HttpResponse.BodySubscribers.ofString(StandardCharsets.UTF_8),
+            string -> new Gson().fromJson(string, JsonObject.class)
+    );
+
+    @Override
+    public long getCacheTime() {
+        return TimeUnit.MINUTES.toMillis(30);
+    }
+
+    @Override
+    public @NotNull Component getVersionMessage(final @NotNull String serverVersion) {
+        final String[] parts = CraftServer.class.getPackage().getImplementationVersion().split("-");
+        @NotNull Component component;
+
+        if (parts.length != 3) {
+            component = text("Unknown server version.", RED);
+        } else {
+            final String versionString = parts[2];
+
+            try {
+                component = this.fetchJenkinsVersion(Integer.parseInt(versionString));
+            } catch (NumberFormatException e) {
+                component = this.fetchGithubVersion(versionString.substring(1, versionString.length() - 1));
+            }
+        }
+
+        final @Nullable Component history = this.getHistory();
+        return history != null ? Component.join(JoinConfiguration.noSeparators(), component, Component.newline(), this.getHistory()) : component;
+    }
+
+    private @NotNull
+    Component fetchJenkinsVersion(final int versionNumber) {
+        final HttpRequest request = HttpRequest.newBuilder(JENKINS_URI).build();
+        try {
+            final HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());
+            if (response.statusCode() != 200) {
+                return text("Received invalid status code (" + response.statusCode() + ") from server.", RED);
+            }
+
+            int latestVersionNumber;
+            try {
+                latestVersionNumber = Integer.parseInt(response.body());
+            } catch (NumberFormatException e) {
+                LOGGER.log(Level.WARNING, "Received invalid response from Jenkins \"" + response.body() + "\".");
+                return text("Received invalid response from server.", RED);
+            }
+
+            final int versionDiff = latestVersionNumber - versionNumber;
+            return this.getResponseMessage(versionDiff);
+        } catch (IOException | InterruptedException e) {
+            LOGGER.log(Level.WARNING, "Failed to look up version from Jenkins", e);
+            return text("Failed to retrieve version from server.", RED);
+        }
+    }
+
+    // Based off code contributed by Techcable <Techcable@outlook.com> in Paper/GH-65
+    private @NotNull
+    Component fetchGithubVersion(final @NotNull String hash) {
+        final URI uri = URI.create(String.format(GITHUB_FORMAT, hash));
+        final HttpRequest request = HttpRequest.newBuilder(uri).build();
+        try {
+            final HttpResponse<JsonObject> response = client.send(request, JSON_OBJECT_BODY_HANDLER);
+            if (response.statusCode() != 200) {
+                return text("Received invalid status code (" + response.statusCode() + ") from server.", RED);
+            }
+
+            final JsonObject obj = response.body();
+            final int versionDiff = obj.get("behind_by").getAsInt();
+
+            return this.getResponseMessage(versionDiff);
+        } catch (IOException | InterruptedException e) {
+            LOGGER.log(Level.WARNING, "Failed to look up version from GitHub", e);
+            return text("Failed to retrieve version from server.", RED);
+        }
+    }
+
+    private @NotNull
+    Component getResponseMessage(final int versionDiff) {
+        return switch (Math.max(-1, Math.min(1, versionDiff))) {
+            case -1 -> text("You are running an unsupported version of DivineMC.", RED);
+            case 0 -> text("You are on the latest version!", GREEN);
+            default -> text("You are running " + versionDiff + " version" + (versionDiff == 1 ? "" : "s") + " beyond. " +
+                    "Please update your server when possible to maintain stability, security, and receive the latest optimizations.", RED);
+        };
+    }
+
+    private @Nullable
+    Component getHistory() {
+        final VersionHistoryManager.VersionData data = VersionHistoryManager.INSTANCE.getVersionData();
+        if (data == null) {
+            return null;
+        }
+
+        final String oldVersion = data.getOldVersion();
+        if (oldVersion == null) {
+            return null;
+        }
+
+        return text("Previous version: " + oldVersion, NamedTextColor.GRAY, TextDecoration.ITALIC);
+    }
+}
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 33a5e900c2cab99c311fa5f5b71a609cf8f802cb..0b414bcb1799d895d8d1b7dce42d7d5bee265ec8 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1656,7 +1656,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
 
     @DontObfuscate
     public String getServerModName() {
-        return "Pufferfish"; // Pufferfish - Pufferfish > // Paper - Paper > // Spigot - Spigot > // CraftBukkit - cb > vanilla!
+        return "DivineMC"; // DivineMC - DivineMC > // Pufferfish - Pufferfish > // Paper - Paper > // Spigot - Spigot > // CraftBukkit - cb > vanilla!
     }
 
     public SystemReport fillSystemReport(SystemReport details) {
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 7ddf52de4b095f63c75b696008fcdde6345fc3c8..cfb665cf895cd96d1b6f78267abfd2c1ac113312 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -261,7 +261,7 @@ import javax.annotation.Nullable; // Paper
 import javax.annotation.Nonnull; // Paper
 
 public final class CraftServer implements Server {
-    private final String serverName = "Pufferfish"; // Paper // Pufferfish
+    private final String serverName = "DivineMC"; // Paper // Pufferfish // DivineMC
     private final String serverVersion;
     private final String bukkitVersion = Versioning.getBukkitVersion();
     private final Logger logger = Logger.getLogger("Minecraft");
diff --git a/src/main/java/org/bukkit/craftbukkit/Main.java b/src/main/java/org/bukkit/craftbukkit/Main.java
index f30621be24c6c3a4f173436fce1ad1c13507c84f..07c2991774323e051844aa83a80b9fdaa0cbeb63 100644
--- a/src/main/java/org/bukkit/craftbukkit/Main.java
+++ b/src/main/java/org/bukkit/craftbukkit/Main.java
@@ -278,7 +278,7 @@ public class Main {
                     if (buildDate.before(deadline.getTime())) {
                         // Paper start - This is some stupid bullshit
                         System.err.println("*** Warning, you've not updated in a while! ***");
-                        System.err.println("*** Please download a new build as per instructions from https://papermc.io/downloads ***"); // Paper
+                        System.err.println("*** Please download a new build from https://github.com/DivineMC/DivineMC/releases/latest ***"); // DivineMC
                         //System.err.println("*** Server will start in 20 seconds ***");
                         //Thread.sleep(TimeUnit.SECONDS.toMillis(20));
                         // Paper End
diff --git a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
index 0ccde7fe2a852f7da72f0b3f5a53cb48d28d1840..29c26e1ffa1d5212df6cdc954a286aba41fb50c3 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/CraftMagicNumbers.java
@@ -464,7 +464,7 @@ public final class CraftMagicNumbers implements UnsafeValues {
 
     @Override
     public com.destroystokyo.paper.util.VersionFetcher getVersionFetcher() {
-        return new gg.pufferfish.pufferfish.PufferfishVersionFetcher(); // Pufferfish
+        return new gq.bxteam.divinemc.DivineVersionFetcher(); // DivineMC
     }
 
     @Override
diff --git a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
index 80553face9c70c2a3d897681e7761df85b22d464..60ac52c6e12ee346133930394e9de8bf74e77ee6 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
@@ -11,7 +11,7 @@ public final class Versioning {
     public static String getBukkitVersion() {
         String result = "Unknown-Version";
 
-        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/gg.pufferfish.pufferfish/pufferfish-api/pom.properties"); // Pufferfish
+        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/gq.bxteam.divinemc/divinemc-api/pom.properties"); // DivineMC
         Properties properties = new Properties();
 
         if (stream != null) {
diff --git a/src/main/resources/logo.png b/src/main/resources/logo.png
index a7d785f60c884ee4ee487cc364402d66c3dc2ecc..f54753531b3bf2e8b5377f342465e727c7da98f2
GIT binary patch
literal 6677
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
B9{K<P

