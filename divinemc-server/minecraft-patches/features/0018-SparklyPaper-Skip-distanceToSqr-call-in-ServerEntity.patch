From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: NONPLAYT <76615486+NONPLAYT@users.noreply.github.com>
Date: Sat, 1 Feb 2025 19:50:02 +0300
Subject: [PATCH] SparklyPaper: Skip distanceToSqr call in
 ServerEntity#sendChanges if the delta movement hasn't changed

Original project: https://github.com/SparklyPower/SparklyPaper

Patch description:

The "distanceToSqr" call is a bit expensive, so avoiding it is pretty nice, around ~15% calls are skipped with this check
We could also check if the x,y,z coordinates are equal, but for now, let's just keep the identity check, which also helps us since Minecraft's code does reuse the original delta movement Vec3 object

diff --git a/net/minecraft/server/level/ServerEntity.java b/net/minecraft/server/level/ServerEntity.java
index e96d4dee14c05f2fa329bfb1588ec795d4e3d730..0868189fee30d40dfb82ae39592a65b510e96b54 100644
--- a/net/minecraft/server/level/ServerEntity.java
+++ b/net/minecraft/server/level/ServerEntity.java
@@ -209,23 +209,27 @@ public class ServerEntity {
 
                 if (this.entity.hasImpulse || this.trackDelta || this.entity instanceof LivingEntity && ((LivingEntity)this.entity).isFallFlying()) {
                     Vec3 deltaMovement = this.entity.getDeltaMovement();
-                    double d = deltaMovement.distanceToSqr(this.lastSentMovement);
-                    if (d > 1.0E-7 || d > 0.0 && deltaMovement.lengthSqr() == 0.0) {
-                        this.lastSentMovement = deltaMovement;
-                        if (this.entity instanceof AbstractHurtingProjectile abstractHurtingProjectile) {
-                            this.broadcast
-                                .accept(
-                                    new ClientboundBundlePacket(
-                                        List.of(
-                                            new ClientboundSetEntityMotionPacket(this.entity.getId(), this.lastSentMovement),
-                                            new ClientboundProjectilePowerPacket(abstractHurtingProjectile.getId(), abstractHurtingProjectile.accelerationPower)
+                    // DivineMC start - Skip "distanceToSqr" call in "ServerEntity#sendChanges" if the delta movement hasn't changed
+                    if (deltaMovement != this.lastSentMovement) {
+                        double d = deltaMovement.distanceToSqr(this.lastSentMovement);
+                        if (d > 1.0E-7 || d > 0.0 && deltaMovement.lengthSqr() == 0.0) {
+                            this.lastSentMovement = deltaMovement;
+                            if (this.entity instanceof AbstractHurtingProjectile abstractHurtingProjectile) {
+                                this.broadcast
+                                    .accept(
+                                        new ClientboundBundlePacket(
+                                            List.of(
+                                                new ClientboundSetEntityMotionPacket(this.entity.getId(), this.lastSentMovement),
+                                                new ClientboundProjectilePowerPacket(abstractHurtingProjectile.getId(), abstractHurtingProjectile.accelerationPower)
+                                            )
                                         )
-                                    )
-                                );
-                        } else {
-                            this.broadcast.accept(new ClientboundSetEntityMotionPacket(this.entity.getId(), this.lastSentMovement));
+                                    );
+                            } else {
+                                this.broadcast.accept(new ClientboundSetEntityMotionPacket(this.entity.getId(), this.lastSentMovement));
+                            }
                         }
                     }
+                    // DivineMC end - Skip "distanceToSqr" call in "ServerEntity#sendChanges" if the delta movement hasn't changed
                 }
 
                 if (packet != null) {
